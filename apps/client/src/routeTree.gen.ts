/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as FleetsFleetIdRouteImport } from './routes/fleets/$fleetId/route'

// Create Virtual Routes

const FleetsViewRouteLazyImport = createFileRoute('/fleets/view')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FleetsViewRouteLazyRoute = FleetsViewRouteLazyImport.update({
  path: '/fleets/view',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/fleets/view/route.lazy').then((d) => d.Route),
)

const FleetsFleetIdRouteRoute = FleetsFleetIdRouteImport.update({
  path: '/fleets/$fleetId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/fleets/$fleetId/route.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/fleets/$fleetId': {
      preLoaderRoute: typeof FleetsFleetIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/fleets/view': {
      preLoaderRoute: typeof FleetsViewRouteLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  FleetsFleetIdRouteRoute,
  FleetsViewRouteLazyRoute,
])

/* prettier-ignore-end */
